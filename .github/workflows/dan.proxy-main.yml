# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - dan proxy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use
  ARTIFACT_NAME: 'proxy'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Dotnet build and publish Function App with configuration
        run: |
          dotnet build --configuration 'Release'
          dotnet publish -c 'Release' --no-restore -o './published-app'
        working-directory: './'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME}}
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/published-app
          include-hidden-files: true

  deploy-staging:   
    runs-on: ubuntu-latest
    environment: 'staging'
    needs: [build]
    steps:
      - name: 'Download artifact for staging'
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME}}
          path: './downloaded-app'
      - name: 'Deploy artifact to staging'
        uses: azure/functions-action@v1
        with:
          app-name: ${{ secrets.FUNCTION_NAME }}
          package: './downloaded-app'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}

  swap-staging-prod:   
    runs-on: ubuntu-latest
    environment: 'production'
    needs: [deploy-staging]
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v2
        with:
          creds: ${{ secrets.azure_credentials }}
      - name: 'Swap staging and production'
        run: |
          az webapp deployment slot swap -g '${{ secrets.RESOURCE_GROUP_PROD }}' -n '${{ secrets.FUNCTION_NAME }}' --slot 'staging' --target-slot 'production'
      - name: 'Azure logout'
        run: |
          az logout

  redeploy-staging:   
    runs-on: ubuntu-latest
    environment: 'staging'
    needs: [swap-staging-prod]
    steps:
      - name: 'Download artifact for staging'
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME}}
          path: './downloaded-app'
      - name: 'Deploy artifact to staging'
        uses: azure/functions-action@v1
        with:
          app-name: ${{ secrets.FUNCTION_NAME }}
          package: './downloaded-app'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
